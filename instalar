#!/usr/bin/env bash
set -euo pipefail

# Cores para mensagens (se suportado)
check_ansi_support() {
    [[ -t 1 ]] && return 0 || return 1
}
if check_ansi_support; then
    RED='\033[0;31m'
    GREEN='\033[0;32m'
    YELLOW='\033[0;33m'
    BLUE='\033[0;34m'
    NC='\033[0m' # No Color
else
    RED=''; GREEN=''; YELLOW=''; BLUE=''; NC=''
fi

# Configurações
MINICONDA_URL="https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh"
INSTALL_DIR="$HOME/miniconda3"
TEMP_DIR=$(mktemp -d)
SCRIPT_NAME=$(basename "$MINICONDA_URL")

# Mensagem inicial
echo -e "${GREEN}"
echo "----------------------------------------------------------"
echo "           Instalação do Miniconda - Versão 2.1           "
echo "----------------------------------------------------------"
echo -e "${NC}"
echo -e "${BLUE}Este script irá:${NC}"
echo "1. Baixar o instalador do Miniconda"
echo "2. Instalar em: $INSTALL_DIR"
echo "3. Configurar aliases no .bashrc"
echo "4. Realizar limpeza automática"
echo -e "\n${YELLOW}Verificando pré-requisitos...${NC}"

# Verifica dependências
check_dependencies() {
    local missing=()
    for cmd in wget bash; do
        if ! command -v $cmd &> /dev/null; then
            missing+=("$cmd")
        fi
    done

    if [ ${#missing[@]} -gt 0 ]; then
        echo -e "${RED}Erro: Os seguintes comandos são necessários:${NC}"
        printf '%s\n' "${missing[@]}"
        return 1
    fi
}

# Verifica e remove instalação existente com confirmação dupla
check_existing_installation() {
    if [ -d "$INSTALL_DIR" ]; then
        echo -e "${YELLOW}Aviso: O diretório de instalação $INSTALL_DIR já existe.${NC}"
        
        # Primeira confirmação
        read -p "Deseja remover a instalação existente e prosseguir com uma nova instalação? [s/N]: " resposta < /dev/tty
        if [[ ! "$resposta" =~ ^[Ss]$ ]]; then
            echo -e "${YELLOW}Instalação cancelada pelo usuário.${NC}"
            return 1  # Alterado para retornar código de erro
        fi

        # Confirmação adicional
        read -p "TEM CERTEZA ABSOLUTA que deseja remover permanentemente $INSTALL_DIR? [s/N]: " confirmacao < /dev/tty
        if [[ ! "$confirmacao" =~ ^[Ss]$ ]]; then
            echo -e "${YELLOW}Remoção cancelada. A instalação existente será mantida.${NC}"
            return 1  # Alterado para retornar código de erro
        fi

        echo -e "${BLUE}Removendo instalação existente...${NC}"
        rm -rf "$INSTALL_DIR" || {
            echo -e "${RED}Falha na remoção. Verifique as permissões do diretório.${NC}";
            return 1;
        }
        echo -e "${GREEN}Remoção concluída com sucesso!${NC}\n"
    fi
}

# Função de limpeza
cleanup() {
    echo -e "\n${BLUE}Realizando limpeza...${NC}"
    if [ -d "$TEMP_DIR" ]; then
        rm -rf "$TEMP_DIR" && echo "Pasta temporária removida: $TEMP_DIR"
    fi
}

# Configura trap para garantir limpeza mesmo em caso de erro
trap cleanup EXIT

# Etapa de download
download_installer() {
    echo -e "\n${BLUE}1/4 Iniciando download do Miniconda...${NC}"
    echo -e "URL: ${YELLOW}$MINICONDA_URL${NC}"
    echo -e "Destino: ${YELLOW}$TEMP_DIR/$SCRIPT_NAME${NC}"
    
    if wget --show-progress -q -P "$TEMP_DIR" "$MINICONDA_URL"; then
        echo -e "${GREEN}Download concluído com sucesso!${NC}"
    else
        echo -e "${RED}Falha no download. Verifique a URL ou sua conexão.${NC}"
        return 1
    fi
}

# Etapa de instalação
install_miniconda() {
    echo -e "\n${BLUE}2/4 Iniciando instalação...${NC}"
    echo -e "Este processo pode levar alguns minutos."
    
    if bash "$TEMP_DIR/$SCRIPT_NAME" -b -u -p "$INSTALL_DIR"; then
        echo -e "\n${GREEN}Instalação concluída com sucesso!${NC}"
    else
        echo -e "${RED}Erro durante a instalação. Verifique as permissões ou espaço em disco.${NC}"
        return 1
    fi
}

# Configuração dos aliases
configure_aliases() {
    echo -e "\n${BLUE}3/4 Configurando ambiente...${NC}"
    
    local marker="# CONFIG_MINICONDA_AUTO"
    local bashrc="$HOME/.bashrc"
    
    if ! grep -q "$marker" "$bashrc"; then
        echo -e "${BLUE}Adicionando aliases no .bashrc${NC}"
        cat <<-EOF >> "$bashrc"

		$marker
		alias conda-on="source '$INSTALL_DIR/bin/activate'"
		alias conda-off="conda deactivate"
		export PATH="$INSTALL_DIR/bin:\$PATH"
		$marker
		EOF
        echo -e "Aliases adicionados:\n${GREEN}conda-on${NC}, ${GREEN}conda-off${NC}"
    else
        echo -e "${YELLOW}Configuração já existe no .bashrc. Nenhuma alteração necessária.${NC}"
    fi
}

# Função principal
main() {
    check_dependencies || exit 1
    check_existing_installation || exit 1  # Adicionada verificação de erro
    download_installer || exit 1
    install_miniconda || exit 1
    configure_aliases
    
    echo -e "\n${GREEN}4/4 Finalizando...${NC}"
    echo -e "${GREEN}----------------------------------------------------------${NC}"
    echo -e "${GREEN}Instalação concluída com sucesso!${NC}"
    echo -e "\nPróximos passos:"
    echo -e "1. Recarregue as configurações do shell:"
    echo -e "   ${YELLOW}source ~/.bashrc${NC}"
    echo -e "2. Para ativar o conda:"
    echo -e "   ${YELLOW}conda-on${NC}"
    echo -e "3. Para criar novo ambiente:"
    echo -e "   ${YELLOW}conda create -n meu_ambiente${NC}"
    echo -e "4. Para desativar o conda:"
    echo -e "   ${YELLOW}conda-off${NC}"
    echo -e "\n${BLUE}Dica: Feche e reabra o terminal para garantir que as alterações tenham efeito.${NC}"
}

# Executa o script principal
main
